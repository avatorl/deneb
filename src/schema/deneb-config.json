{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "type": "object",
    "definitions": {
        "IProviderSettings": {
            "type": "object",
            "required": ["documentationUrl", "schemaUrl"],
            "properties": {
                "documentationUrl": {
                    "description": "Location of applicable provider documentation",
                    "type": "string"
                },
                "schemaUrl": {
                    "description": "Location of applicable provider JSON schema.",
                    "type": "string"
                }
            }
        }
    },
    "properties": {
        "features": {
            "description": "Visual feature switches.",
            "type": "object",
            "additionalProperties": false,
            "required": ["unitTestCanary"],
            "properties": {
                "unitTestCanary": {
                    "description": "Used to validate unit testing functionality. Should always be `false`.",
                    "type": "boolean",
                    "enum": [false]
                },
                "developerMode": {
                    "description": "Provides a means of enabling developer-specific functionality independent of debugging.",
                    "type": "boolean"
                },
                "enableExternalUri": {
                    "description": "Enable external URIs in specifications for data and images - if enabled, we'll preserve any URI/URL-based content in specifications and config, although these will be subject to the standard CORS limitations that custom visuals are subject to. If disabled, then we process text for any occurrences of a URI and strip it out (except for `data:` URIs). I had attempted this by creating a custom loader for Vega but it seems to work for data and ignore images, so whilst this approach is crude, it works for our purposes.",
                    "type": "boolean"
                },
                "fetchMoreData": {
                    "description": "Enables the Fetch More Data API and Data Limit property menu functionality.",
                    "type": "boolean"
                },
                "selectionContextMenu": {
                    "description": "Enables the Power BI context menu to display on data points (if they can be resolved) via Visual Editor settings. This currently only works for single view Vega-Lite specifications and needs further R&D.",
                    "type": "boolean"
                },
                "selectionDataPoint": {
                    "description": "Enables the Power BI selection manager to accept signals from Vega-Lite selections and (if they resolve to the `dataView`) cross-highlight other visuals. Visual authors will need to apply their own visual encoding of selections to indicate which points are currently selected.",
                    "type": "boolean"
                },
                "tooltipHandler": {
                    "description": "Allows custom `TooltipHandler` to be enabled via Visual Editor settings. This will resolve tooltips for data points using the Power BI tooltip APIs based on signals from Vega/Vega-Lite.",
                    "type": "boolean"
                },
                "tooltipResolveNumberFieldFormat": {
                    "description": "If a field in a Vega tooltip's `datum` object is present in the `tooltip` object, attempt to find a corresponding field name in the visual dataset metadata, and get its format string (if not already formatted in the spec).",
                    "type": "boolean"
                }
            }
        },
        "providerResources": {
            "description": "Embedded versions - used to help automate the packaged Vega and Vega-Lite versions on the visual's landing page, plus URLs or resources that we might want to expose to the user within the visual.",
            "type": "object",
            "additionalProperties": false,
            "required": ["vega", "vegaLite"],
            "properties": {
                "vega": {
                    "$ref": "#/definitions/IProviderSettings",
                    "description": ""
                },
                "vegaLite": {
                    "$ref": "#/definitions/IProviderSettings",
                    "description": ""
                }
            }
        },
        "editorDefaults": {
            "description": "For the Ace editor used with `jsoneditor`, this object tracks any configuration values that aren't covered in any logic or properties elsewhere.",
            "type": "object",
            "additionalProperties": false,
            "required": ["debounceInterval", "tabSize"],
            "properties": {
                "debounceInterval": {
                    "description": "Time (in ms) before debouncing user input to Redux, the longer the interval, the less chatty things are, but the longer the perceived lag for things to happen after the user finishes typing in the editor.",
                    "type": "integer"
                },
                "tabSize": {
                    "description": "Number of tabs to apply per level when formatting JSON.",
                    "type": "integer"
                },
                "position": {
                    "description": "Position in the pane",
                    "enum": ["left", "right"]
                }
            }
        },
        "splitPaneDefaults": {
            "description": "For the Editor pane, we're using `react-split-pane` to allow the author to resize it. This object specifies the sizes we should allow for this pane within the visual viewport.",
            "type": "object",
            "additionalProperties": false,
            "required": [
                "minSize",
                "defaultSizePercent",
                "maxSizePercent",
                "collapsedSize"
            ],
            "properties": {
                "minSize": {
                    "description": "Minimum allowed size of expanded editor pane (px).",
                    "type": "integer"
                },
                "defaultSizePercent": {
                    "description": "Default percentage of viewport to allocate for the expanded editor pane.",
                    "type": "number"
                },
                "maxSizePercent": {
                    "description": "Maximum percentage of viewport to allow for the expanded editor pane.",
                    "type": "number"
                },
                "collapsedSize": {
                    "description": "The width of the collapsed editor pane (px).",
                    "type": "integer"
                }
            }
        },
        "visualViewPortAdjust": {
            "description": "For the rendered Vega spec, how much spacing (in px) to apply to the visual, within its visible area.",
            "type": "object",
            "additionalProperties": false,
            "required": ["top", "left"],
            "properties": {
                "top": {
                    "type": "integer"
                },
                "left": {
                    "type": "integer"
                }
            }
        }
    },
    "required": [
        "features",
        "editorDefaults",
        "splitPaneDefaults",
        "visualViewPortAdjust"
    ]
}
